<style type="text/css">
<!--
#id_Plan {
  width:100%;
  height:auto;
  overflow:auto;
}
#id_Plan .mk-content-right,
#id_Plan .mk-search,
#id_Plan .mk-header {
  border:0;
}
#id_Plan .mk-footer {
  border-right-width:0;
  border-bottom-width:0;
}
#id_Plan_Form i {
  border:0;
}
#id_PlanPreview {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  font-size:3em;
  height:198px;
  max-width:40em;
  overflow:auto;
}
#id_Plan_Form input.c_txt {
  display:none;
}
#id_Plan_Form input.c_val {
}
#id_Plan_Form input.enum {
  background-color:transparent;
}
ul#id_list li {
  margin-right:2px;
}
ul#id_list table {
  border-collapse:collapse;
}
ul#id_list table td {
  white-space:nowrap;
  margin:0;
  padding:1px;
}
ul#id_list table td  textarea,
ul#id_list table td input[type=text] {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  width:100%;
  border:0;
  margin:0;
}

table.c_upload,
table.c_plot {
  border-collapse:collapse;
}
#id_drop {
  cursor:pointer;
}
div.c_msg {
  width:100%;
  white-space:pre;
  min-height:2em;
  font-family:monospace;
}
.ui-autocomplete {
  max-height: 70px;
  height: 70px;
  overflow-y: auto;
  overflow-x: hidden;
  position: absolute;
  cursor: default;
  z-index:1000 !important;
}
-->
</style>
<script language="JavaScript" type="text/javascript">
// #####################################################################
var type = "",
    oBEP = {};
var RVorabzug = new RegExp("^#+$", "g"),
    RInteger  = new RegExp("^[0-9]+$", "g"),
    RAlpha    = new RegExp("^[A-Z,a-z]+$", "g");
// #####################################################################
var autoOpt = {
  source: function(request, response){
    var q = this.element[0].name.replace(/_txt/, ""),
        D = [],
        m = new RegExp(request.term, "i"),
        F = this.element[0].form;
    for(var x in oBEP[q])
      if(m.test(oBEP[q][x]))
        D.push({label: oBEP[q][x], value: x});
    response(D);
  },
  select: function(ev, ui){
    var q = this.name.replace(/_txt/, "");
    this.value = ui.item.label;
    $("input[name="+q+"]", this.form)
    .val(ui.item.value)
    .trigger("change");
    return false;
  },
  change: function(ev, ui){
    if(ui.item === null){
      var q = this.name.replace(/_txt/, "");
      this.value = oBEP[q][$("input[name="+q+"]", this.form).val()];
    }
  }
};
// #####################################################################
jQuery(function($){
  // -------------------------------------------------------------------
  var $T = null,
      slfMenuFile = oPrjUser.menu;
  // -------------------------------------------------------------------
  make();
  // -------------------------------------------------------------------
  function selectMenu(ui){
    var oldMenuFile  = $(ui.oldMenu).data("menu"),
        newMenuFile  = $(ui.newMenu).data("menu");

    if(DEBUG > 0 && newMenuFile != slfMenuFile){
      var div_menu = $("#id_Content>div").filter('[data-menu="'+oldMenuFile+'"]');
      $.Topic("selectMenu").unsubscribe(selectMenu);
      $.Topic("logout").unsubscribe(saveOption);
      if($T)
        $T.tables("destroy");
      div_menu.detach();
      return
    }

    if(newMenuFile == slfMenuFile){
      goTo();
      $.Topic("logout").subscribe(saveOption);
      if($T)
        $T
        .tables("refresh")
        .focus();
    } else if(oldMenuFile == slfMenuFile){
      saveOption();
      $.Topic("logout").unsubscribe(saveOption);
    }
  }
  // -------------------------------------------------------------------
  function saveOption(){
    if($T)
      $T.tables("saveOption").focus();
  }
  // -------------------------------------------------------------------
  function make(){
    var filtFix = "",
        LPH_Button = "";
    if(typeof oPrjUser.val.lph == "undefined")
      oPrjUser.val.lph = oPrjUser.lph[0];
    // alle Pl√§ne ......................................................
    if(slfMenuFile == "10_Planning.htm"){
      $("input.c_txt", "#id_Plan_Form").hide();
      $("input.c_val", "#id_Plan_Form").show();
      filtFix = "lph IN ("+oPrjUser.lph.join(",")+")";
    // Planer ..........................................................
    } else {
      // type
      type    = slfMenuFile.substr(6).replace(/-.*$/g, "");
      filtFix =
        "type='"+type+"' AND "+
        "lph IN ("+oPrjUser.lph.join(",")+") AND "+
        "akt = 'X' AND "+
        "lph = "+oPrjUser.val.lph;
      LPH_Button = $.sprintf(
        '<button data-choice="LPH">LPH%i %s</button>',
        oPrjUser.val.lph, LPH[oPrjUser.val.lph]
      );
      // Bauteil + Ebene + Planart
      oBEP = {
        bauteil: {},
        ebene:   {},
        planart: {}
      };
      var oX = {B:"bauteil", G:"ebene", P:"planart"};
      for(var t in oPrj.val.opt){
        var p = oPrj.val.opt[t].p.split(",");
        if(p.indexOf(type) != -1){
          if(typeof oBEP[oX[oPrj.val.opt[t].a]] == "undefined")
            oBEP[oX[oPrj.val.opt[t].a]] = {};
          oBEP[oX[oPrj.val.opt[t].a]][oPrj.val.opt[t].c] =
            oPrj.val.opt[t].c+" "+oPrj.val.opt[t].t;
        }
      }
      $("input.c_val", "#id_Plan_Form").hide();
      $("input.c_txt", "#id_Plan_Form").show();
      $("input[name=lph],input[name=akt]", "#id_Plan_Form")
      .prop("disabled", true);
    }
    if(typeof oPrjAccess[slfMenuFile].vie != "undefined" && !oPrjAccess[slfMenuFile].vie)
      $("#id_Plan").hide();
    else {
      $T = $("#id_Plan").tables({
        colModel: [{
          indx:   "id",
          title:  "ID",
          show:    true,
          search:  true,
          align:  "right",
          width:  "3em"
        },{
          indx:   "stmp",
          title:  "Stamp",
          show:    true,
          search:  true,
          align:  "left",
          width:  "10em"
        },{
          indx:   "type",
          title:  "Type",
          show:    true,
          search:  true,
          align:  "center",
          width:  "1.5em"
        },{
          indx:   "akt",
          title:  "Current",
          show:    true,
          search:  true,
          align:  "center",
          width:  "1.5em"
        },{
          indx:   "autor",
          title:  "Autor",
          show:    true,
          search:  true,
          align:  "left",
          width:  "5em"
        },{
          indx:   "plnr",
          title:  "Plannummer",
          show:    true,
          search:  true,
          align:  "left",
          width:  "13em"
        },{
          indx:   "name",
          title:  "Name",
          show:    false,
          search:  true,
          align:  "left",
          width:  "10em"
        },{
          indx:   "lnr",
          title:  "LNr",
          show:    true,
          search:  true,
          align:  "center",
          width:  "2em"
        },{
          indx:   "ix",
          title:  "IX",
          show:    true,
          search:  true,
          align:  "center",
          width:  "1.5em"
        },{
          indx:   "bauteil",
          title:  "Bauteil",
          show:    true,
          search:  true,
          align:  "center",
          width:  "3em"
        },{
          indx:   "ebene",
          title:  "Ebene",
          show:    true,
          search:  true,
          align:  "center",
          width:  "3em"
        },{
          indx:   "planart",
          title:  "Planart",
          show:    true,
          search:  true,
          align:  "center",
          width:  "4em"
        },{
          indx:   "pldatum",
          title:  "Plandatum",
          show:    true,
          search:  true,
          align:  "center",
          width:  "6em"
        },{
          indx:   "stop",
          title:  "Lock",
          show:    true,
          search:  true,
          align:  "center",
          width:  "4em"
        },{
          indx:   "zusatz",
          title:  "Zusatz",
          show:    true,
          search:  true,
          align:  "left",
          width:  "10em"
        },{
          indx:   "note",
          title:  "Note",
          show:    false,
          search:  true,
          align:  "left",
          width:  "20em"
        }],
        accessModel: $.extend({}, oPrjAccess[slfMenuFile], {ins:false}),
        dataModel:   $.extend({}, mysqlDataModel),
        autoOpt:   autoOpt,
        alignTitle: "center",
        Left:       6,
        Header:     null,
        Footer:     null,
        Icons:      '<button data-choice="PLOT" title="Reproservice"><i class="fa fa-print"></i></button>'+
                    '<button data-choice="DN" title="Download"><i class="fa fa-download"></i></button>'+
                    ((slfMenuFile == "10_Planning.htm" || oPrjAccess[slfMenuFile].ins == false) ?
                     '' :
                     '<button data-choice="UP" title="Upload"><i class="fa fa-upload"></i></button>'
                    )+
                    LPH_Button,
        ID:         "id",
        orderBy:    "id",
        orderType:  "DESC",
        recId:      0,

        User:       oUser.dbuser, // dbuser
        Sign:       slfMenuFile,  // navig identification

        SQL_SysBase:  SQL_PRJ_BASE,
        SQL_SysTable: SQL_PRJ_TABLE,
        SQL_Base:     SQL_PRJ_BASE,
        SQL_Table:    "plan",
        SQL_Query:    "SELECT * FROM plan",
        filtFix:      filtFix,
        
        // functions + events
        i18n: _,
        beforeEdit: function(ev, ui){
          $("button", ui.form).button("enable");
        },
        closeEdit: function(ev, ui){
          $("button", ui.form).button("disable");
        },
        refreshRec: function(ev, ui, callBack){
          if(ui.REC.length == 0){
            $("#id_PlanPreview").hide();
            $("a", "#id_Plan_Form").hide();
            return;
          }
          // Bauteil + Ebene + Planart
          for(var x in oBEP)
            $("input[name="+x+"_txt]", "#id_Plan_Form").val(oBEP[x][ui.REC[0][x]]);
          // link
          if(ui.REC[0].public == "X"){
            var href = $.sprintf("%spublic.htm#%i/plan/%i",
                                  window.location, oPrj.id, ui.REC[0].id);
            $("a", "#id_Plan_Form")
            .show()
            .prop("href", href);
          } else
            $("a", "#id_Plan_Form")
            .hide();
          // preview
          var Path = $.sprintf(
                "bermuda/%s/plan/%06i.0.jpg",
                SQL_PRJ_BASE, ui.REC[0].id
              );
          var url = "/loa?"+$.param({
              id:  REST_ID,
              path: Path
            });
            $("#id_PlanPreview")
            .show()
            .attr("src", url+"#"+Math.random());
        },
        build: goTo,
        clickButton: function(ev, ui){
          switch(ui.choice){
            case "DN": // ------------------------------------------------
              if(ui.data.length == 0){
                popup_message("Keine Dateien?");
                return;
              }
              var log_note = [];
              menu(ui, function(data){
                if(data.length == 1){   // only 1 file ...................
                  var Path = $.sprintf(
                    "bermuda/%s/plan/%06i.%s",
                    SQL_PRJ_BASE, data[0].id, data[0].name.replace(/^.*[.]/g, "")
                  );
                  submit_post_via_hidden_form("/loa", {
                    id:  REST_ID,
                    path: Path,
                    name: data[0].name
                  });
                  log_note.push($.sprintf(
                    "%i %s", data[0].id, data[0].name
                  ));
                } else if(data.length){ // zip ...........................
                  var files = [],
                      names = [];
                  for(var i in data){
                    var ext = data[i].name.replace(/^.*[.]/g, "");
                    files.push($.sprintf(
                      "bermuda/%s/plan/%06i.%s",
                      SQL_PRJ_BASE, data[i].id, ext
                    ));
                    names.push(data[i].plnr+"."+ext);
                    log_note.push($.sprintf(
                      "%i %s", data[i].id, data[i].name
                    ));
                  }
                  submit_post_via_hidden_form("/zip", {
                    id:  REST_ID,
                    names: JSON.stringify(names),
                    files: JSON.stringify(files)
                  });
                } else {
                  popup_message("Keine ausgew√§hlte Datei darf geladen werden!", null, null, 3000)
                  return;
                }
                log(oUser.dbuser, oPrj.project, "DOWNLOAD",
                  $.sprintf("plan / %s\n%s", type, log_note.join("\n"))
                ); 
              });
              break;
            case "UP": // ------------------------------------------------
              plan_upload(ui);
              break;
            case "PLOT": // ----------------------------------------------
              if(ui.data.length == 0)
                return;
              menu(ui, function(data){
                plot(data, "plan");
              });
              break;
            case "LPH":
              lph_set(ui);
              break;
            default:
              console.log(ui.choice);
              break;
          }
        }
      });
      setTimeout(function(){
        $T.focus();
      }, 1000);
    }
    $.Topic("selectMenu").subscribe(selectMenu);
    $.Topic("logout").subscribe(saveOption);
  }
  // -------------------------------------------------------------------
  function goTo(){
    change_all_lang($T);
    //console.log(val);
    // .................................................................
    var opt = [];
    for(var i in oPrj.val.planer)
      opt.push($.sprintf(
        '<option value="%s">%s</option>',
        oPrj.val.planer[i].replace(/-.*$/g, ""),
        oPrj.val.planer[i]
      ));
    $("select[name=type]", "#id_Plan_Form")
    .html(opt.join(""))
/*
    .selectmenu({
      disabled:type != ""
    });
*/
    if(type != "")
      $("select[name=type]", "#id_Plan_Form")
      .prop("disabled", true);
    // .................................................................
    $("i", "#id_Plan_Form")
    .hover(function(ev){
      $(this).addClass("ui-state-active");
    }, function(ev){
      $(this).removeClass("ui-state-active");
    })
    .click(function(ev){
      var c = $(this).data("choice");
      if(c == "lock"){
        if($("#id_Plan_Form", "#id_Plan").length){
          $("button[data-choice=EDIT]", $T).click();
          return;
        }
        var v = $("input[name=stop]", "#id_Plan_Form").val();
        if(v == oUser.dbuser)
          $("input[name=stop]", "#id_Plan_Form").val("");
        else if(v == "")
          $("input[name=stop]", "#id_Plan_Form").val(oUser.dbuser);
        return;
      }
      var v = $("input[name="+c+"]", "#id_Plan_Form").val();
      if(v != ""){
        var W = window.open("mailto:"+v, "MAIL");
        W.close();
      }
    });
  }
  // -------------------------------------------------------------------
  function lph_set(ui){
    var self = ui.element,
        el = ui.button,
        li = [
          '<li data-choice="CANCEL">'+
            '<div>'+
              _("Cancel")+
            '</div>'+
          '</li>',
          '<li><div></div></li>'
        ],
        $menu = $('ul.mk-tables-menu', self.element);
    for(var i in oPrjUser.lph)
      li.push($.sprintf(
        '<li data-choice="%i"><div>LPH%i %s</div></li>',
        oPrjUser.lph[i], oPrjUser.lph[i], LPH[oPrjUser.lph[i] - 1]
      ));
    if(!$menu.is(":hidden")){
      $(this)
      .menu("destroy")
      .hide();
      self._overlay(false);
      self.element.focus();
      return false;
    }
    self._overlay(true);
    $menu
    .html(li.join(""))
    .show()
    .position({
      my: "left top",
      at: "left bottom",
      of: el
    })
    .menu({
      select: function(ev, uis){
        var c = $(uis.item).data("choice");
        if(typeof c == "undefined")
          return;
        switch(c){
          case "CANCEL":
            break;
          default:
            var t = uis.item.text();
            $(el).button("option", "label", '<div>'+t+'</div>');
            oPrjUser.val.lph = c;
            filtFix =
              "type='"+type+"' AND "+
              "lph IN ("+oPrjUser.lph.join(",")+") AND "+
              "akt = 'X' AND "+
              "lph = "+oPrjUser.val.lph;
            $T
            .tables("option", {
              cont:    {},
              filtFix: filtFix,
              filt:    "",
              filtSw:  false
            })
            .tables("refresh");
            var o = {
              id: REST_ID,
              base: SQL_PRJ_BASE,
              cmd:  [{
                sgn:   "LPH",
                query: "UPDATE sys_user SET val=?",
                para: [JSON.stringify(oPrjUser.val)]
              }]
            };
            $.post("/sql", o);
        }
        $(this).menu("option", "close")();
      },
      close: function(){
        $menu
        .off()
        .menu("destroy")
        .hide();
        self._overlay(false);
        self.element.focus();
      }
    })
    .focus()
    .on("keydown", function(ev){
      if(ev.which == $.ui.keyCode.ESCAPE){
        $menu.menu("option", "close")();
      }
      ev.preventDefault();
      return false;
    });
    $($menu).on("mousewheel",  wheel);
    $("ul", $menu).on("mousewheel",  wheel);
    // mousewheel
    function wheel(ev){
      var dY = ev.originalEvent.deltaY;
      $(this).scrollTop($(this).scrollTop() + 4 * dY);
      return false;
    }
  }
  // -------------------------------------------------------------------
});
// #####################################################################
function plan_upload(ui){
  var $dialog = $('<div>'),
      mail = [],
      logs = [];
  // parse indexes of schema
  var PARS   = {
    L: [], // LPH 1-9
    P: [], // Planer (type)
    B: [], // Bauteil
    G: [], // Ebene (Geschoss)
    A: [], // Planart
    J: [], // Jahr
    M: [], // Monat
    T: [], // Tag
    N: [], // Laufende Nummer
    I: []  // Planindex
  };
  for(var x in PARS){
    PARS[x][0] = oPrj.val.schema.v.search(x);
    if(PARS[x][0] < 0)
      continue;
    var l = oPrj.val.schema.v.length;
    PARS[x][1] = 0;
    for(var i = PARS[x][0];i < l && x == oPrj.val.schema.v[i];i++)
      PARS[x][1]++;
  }
//console.log(PARS);
  // user + groups f√ºr email
  var o = {
    id: REST_ID,
    base: SQL_PRJ_BASE,
    cmd:  [{
      sgn:   "USER",
      query: "SELECT dbuser,grp FROM sys_user ORDER BY dbuser",
      para: []
    },{
      sgn:   "GRP",
      query: "SELECT grp FROM sys_grp ORDER BY grp",
      para: []
    }]
  };
  $.post("/sql", o, function(D){
    var opt = [
      '<input type="checkbox" id="all_0" class="ALL">'+
      '<label for="all_0">Alle</label>'
    ];
    for(var i in D.USER){
      opt.push($.sprintf(
        '<input type="checkbox" id="user_%i" value="%s" class="USER %s">'+
        '<label for="user_%i">%s</label>',
        i, D.USER[i].dbuser, D.USER[i].grp,
        i, D.USER[i].dbuser
      ));
    }
    for(var i in D.GRP){
      opt.push($.sprintf(
        '<input type="checkbox" id="grp_%i" value="%s" class="GRP">'+
        '<label for="grp_%i">Gruppe %s</label>',
        i, D.GRP[i].grp,
        i, D.GRP[i].grp
      ));
    }
    $dialog
    .html(
'<table class="c_upload" style="width:60em">\
  <tr>\
    <th style="width:40%">Sofort Benachrichtigung</th>\
    <th style="width:60%">Benachrichtigungstext / optional</th>\
  </tr>\
  <tr>\
    <td style="white-space:nowrap">\
      <div style="height:10em;width:100%;overflow:auto;overflow-x:hidden" class="ui-widget-content">\
        <div class="c_user_grp">'+opt.join('<br>')+'</div>\
      </div>\
    </td>\
    <td><textarea name="txt" style="height:10em;width:100%" class="ui-widget-content"></textarea></td>\
  </tr>\
  <tr>\
    <td colspan="2">\
      <b>Drag and Drop eine oder mehrere Dateien oder Click f√ºr eine Auswahl von Dateien</b>\
      <div id="id_drop" style="height:20em;width:100%;overflow:auto" class="ui-widget-content">\
        <ul id="id_list" class="fa-ul"></ul>\
      </div>\
    </td>\
  </tr>\
</table>\
<input id="id_multi" type="file" multiple style="display:none">'
    );
    // -----------------------------------------------------------------
    $("input.GRP", $dialog).change(function(ev){
      $("input."+this.value, $dialog).prop("checked", this.checked);
    });
    $("input.ALL", $dialog).change(function(ev){
      $("input", $dialog).prop("checked", this.checked);
    });
    // -----------------------------------------------------------------
    $("#id_drop", $dialog)
    .bind("dragenter dragover", function(ev) {
      $(this).addClass("hover");
      return false;
    })
    .bind("dragleave", function(ev) {
      $(this).removeClass("hover");
      return false;
    })
    .bind("drop", function(ev) {
      $(this).removeClass("hover");
      var files = ev.originalEvent.dataTransfer.files;
      for(var i = 0,I = files.length;i < I;i++){
        load(files[i]);
      }
      return false;
    })
    .bind("click", function(ev) {
      $("#id_multi", $dialog).click();
    });
    $("#id_multi", $dialog)
    .bind("change", function(ev) {
      var files = this.files;
      for(var i = 0,I = files.length;i < I;i++){
        load(files[i]);
      }
    });
    // -----------------------------------------------------------------
    $dialog
    .dialog({
      width: "auto",
      title: "Upload",
      modal: true,
      closeOnEscape: false,
      resizable: false,
      buttons: [{
        text: _("Send"),
        class: "c_OK",
        click: function(){
          var self = this,
              adr = [];
          $("input.USER:checked", $dialog).each(function(){
            adr.push(this.value);
          });
          // keine Dateien oder keine Empf√§nger
          if(mail.length == 0 || adr.length == 0){
            $dialog.dialog("close");
            return;
          }
          // Nachrichttext
          var $p = popup_message(
            "<p>Bitte warten!</p><p>Nachricht wird gesendet...</p>",
            "", null, 3000);
            
          if($("textarea[name=txt]", $dialog).val() != "")
            mail.unshift($("textarea[name=txt]", $dialog).val()+"\n");
          mail.unshift(
            "Der Benutzer "+oUser.dbuser+" hat die folgenden Dateien "+
            "auf die Plattform <a href='"+location.origin+"'>BERMUDA</a> "+
            "hochgeladen und m√∂chte, "+
            "dass Sie dar√ºber informiert werden:\n");
          $.post("/eml", {
            id:      REST_ID,
            text:    '<pre>'+mail.join("\n")+'</pre>',
            to:      adr.join(","),
            from:    oUser.dbuser,
            subject: "BERMUDA Upload/Planung - "+oPrj.project
          }, function(D){
            $p.dialog("close");
            popup_message(D, "", null, D == "OK" ? 2000 : 10000);
            $dialog.dialog("close");
          }, "text") // eml
          .fail(function(err){
            console.log(err.responseText);
            $dialog.dialog("close");
          });
        }
      },{
        text: _("Cancel"),
        click: function(){
          $(this).dialog("close");
        }
      }],
      open: function(ev, ui){
      },
      close: function(ev, ui ){
        $(this)
        .off()
        .dialog("destroy");
        if(logs.length)
          log(oUser.dbuser, oPrj.project, "UPLOAD",
            $.sprintf("plan / %s\n%s", type, logs.join("\n"))
          ); 
      }
    }).on("keydown", function(ev){
      if(ev.keyCode == $.ui.keyCode.ENTER && ev.ctrlKey){
        var OK = $("button.c_OK", $(this).dialog("widget"));
        OK.click();
      } else if(ev.keyCode == $.ui.keyCode.ESCAPE){
        $(this).dialog("close");
      }
      return;
    });
  })
  .fail(function(err){
    console.log(err.responseText);
  });
  // -------------------------------------------------------------------
  function load(f){
    var Len    = Math.max(oPrj.val.schema.f.length, oPrj.val.schema.v.length),
        Ext    = f.name.replace(/.*\./g, ""),
        LstAkt = -1;
    // schema
    var SCH = {
        name:   f.name,
        zusatz: f.name.substr(Len, f.name.length - Len - Ext.length - 1),
        plnr:   f.name.substr(0, f.name.length - Ext.length - 1)
      };
    if(oPrj.val.schema.f.length > SCH.plnr.length)
      SCH.plnr = $.sprintf(
        "%s%"+(oPrj.val.schema.f.length - SCH.plnr.length)+"s",
        SCH.plnr, " "
      );
    // planindex
    if(PARS.I[0] >= 0){
      SCH.ix = SCH.plnr.substr(PARS.I[0], PARS.I[1]);
    }
    // form
    var li = $(
      '<li>'+
        '<i class="fa-li fa fa-spinner fa-spin"></i>'+
        '<div class="pr" style="width:20%;height:1.2em;display:inline-block"></div>'+
        '<div style="vertical-align:top;margin-left:5px;display:inline-block">'+f.name+'</div>'+
        '<div style="float:right;display:inline-block;font-size:0.7em">'+
          '<button title="Remove" data-choice="REMOVE">'+
            '<i class="fa fa-trash"></i>'+
          '</button>'+
          '<button title="Upload" data-choice="UPLOAD">'+
            '<i class="fa fa-upload"></i>'+
          '</button>'+
        '</div>'+
        '<table style="width:100%">'+
          '<tr>'+
            '<td class="ui-widget-header">Bauteil</td>'+
            '<td class="ui-widget-content">'+
              '<input type="text" name="bauteil_txt" class="autocomplete">'+
              '<input name="bauteil" type="hidden" data-pars="B">'+
            '</td>'+
            '<td class="ui-widget-header">Pl.Nr.</td>'+
            '<td class="ui-widget-content" colspan="5">'+
              '<input name="plnr" type="text" readonly>'+
            '</td>'+
          '</tr>'+
          
          '<tr>'+
            '<td class="ui-widget-header">Ebene</td>'+
            '<td class="ui-widget-content">'+
              '<input type="text" name="ebene_txt" class="autocomplete">'+
              '<input name="ebene" type="hidden" data-pars="G">'+
            '</td>'+
            '<td class="ui-widget-header">Lfd.Nr.</td>'+
            '<td class="ui-widget-content">'+
              '<input name="lnr" type="text">'+
            '</td>'+
            '<td class="ui-widget-header">Zusatz</td>'+
            '<td class="ui-widget-content" colspan="3">'+
              '<input name="zusatz" type="text">'+
            '</td>'+
          '</tr>'+

          '<tr>'+
            '<td class="ui-widget-header" style="width:1%">Planart</td>'+
            '<td class="ui-widget-content">'+
              '<input type="text" name="planart_txt" class="autocomplete">'+
              '<input name="planart" type="hidden" data-pars="A">'+
            '</td>'+
            '<td class="ui-widget-header" style="width:1%">Index</td>'+
            '<td class="ui-widget-content" style="width:10%">'+
              '<input name="ix" type="text" data-pars="I">'+
            '</td>'+
            '<td class="ui-widget-header" style="width:1%">Pl.Dat.</td>'+
            '<td class="ui-widget-content" style="width:1%">'+
              '<input type="text" name="pldatum" class="datepicker" style="text-align:center;width:7em">'+
            '</td>'+
            '<td class="ui-widget-header" style="width:1%">M 1:</td>'+
            '<td class="ui-widget-content" style="width:1%">'+
              '<input type="text" name="m" value="0" style="width:3em;text-align:center">'+
            '</td>'+
          '</tr>'+

          '<tr>'+
          '<td class="ui-widget-content" colspan="8">'+
            '<div class="c_msg"></div>'+
          '</td>'+
          '</tr>'+
        '</table>'+
      '</li>'
    ).appendTo("ul#id_list", $dialog);
    // datepicker ......................................................
    $("input.datepicker", li).datepicker({dateFormat:"yy-mm-dd"});
    // autocomplete
    $("input.autocomplete", li).autocomplete(autoOpt);
    // change ..........................................................
    $("input", li).change(function(){
      var q = this.name.replace(/_txt/, ""),
          Q = $("input[name="+q+"]", li),
          v = Q.val(),
          p = Q.data("pars");
      if(typeof p != "undefined"){
        SCH[q] = v;
        for(var i = 0,j = PARS[p][0];i < PARS[p][1];i++,j++)
          SCH.plnr = setCharAt(SCH.plnr, j, v[i]);
      } else
        SCH[q] = v;
      check_schema();
    });
    // progressbar .....................................................
    $("div.pr", li).progressbar({value: 0});
    // stop click ......................................................
    $(li).bind("click", function(ev) {return false;});
    // buttons + events ................................................
    $("button", li)
    .button()
    .click(function(ev){
      var c = $(this).data("choice");
      switch(c){
        case "REMOVE":
          li.remove();
          break;
        case "UPLOAD":
          send_file(f);
          break;
        default:
          console.log(this, c);
      }
      return false;
    });
    // scroll ..........................................................
    $("ul#id_list").parent().scrollTop(1000);
    // start check .....................................................
    check_schema(function(ret){
      if(ret)
        send_file(f);
    });
    // check_schema ----------------------------------------------------
    function check_schema(callBack){
      var ret    = true,
          Err    = [],
          Wrn    = [],
          ErrInp = [];
      // check fix
      for(var i = 0;i < oPrj.val.schema.f.length;i++){
        if(
          oPrj.val.schema.f[i] != " " &&
          SCH.plnr[i] != oPrj.val.schema.f[i]
        ){
          SCH.plnr = setCharAt(SCH.plnr, i, oPrj.val.schema.f[i]);
          if(ret){
            Err.push("E - Das fixe Teil entspricht nicht der Schema");
            ErrInp.push("plnr");
            ret = false;
          }
        }
      }
      // plan datum
      if(PARS.J[0] < 0)
        SCH.pldatum = date_time().E;
      else {
        var J = parseInt(SCH.plnr.substr(PARS.J[0], PARS.J[1]));
        if(J < 2000)
          J += 2000;
        var M = parseInt(SCH.plnr.substr(PARS.M[0], PARS.M[1]));
        var T = parseInt(SCH.plnr.substr(PARS.T[0], PARS.T[1]));
        if(isNaN(J) || isNaN(M) || isNaN(T) || M > 12 || M < 1 || T > 31 || T < 1){
          SCH.pldatum = date_time().E;
          Wrn.push("W - Der Plandatum entspricht nicht der Schema");
        } else
          SCH.pldatum = $.sprintf("%04d-%02d-%02d", J, M, T);
        date2plnr(SCH, PARS);
      }
      $("input[name=pldatum]", li).val(SCH.pldatum);
      // bauteil
      if(PARS.B[0] >= 0){
        SCH.bauteil = SCH.plnr.substr(PARS.B[0], PARS.B[1]);
        if(typeof oBEP.bauteil[SCH.bauteil] == "undefined"){
          Err.push($.sprintf("E - Das Bauteil %s ist nicht korrekt", SCH.bauteil));
          ErrInp.push("bauteil", "bauteil_txt");
          ret = false;
          $("input[name=bauteil_txt]", li).val("");
        } else
          $("input[name=bauteil_txt]", li).val(oBEP.bauteil[SCH.bauteil]);
        $("input[name=bauteil]", li).val(SCH.bauteil);
      } else {
        SCH.bauteil = "";
        $("input[name=bauteil]", li).val(SCH.bauteil);
        $("input[name=bauteil_txt]", li).val("");
      }
      // ebene
      if(PARS.G[0] >= 0){
        SCH.ebene = SCH.plnr.substr(PARS.G[0], PARS.G[1]);
        if(typeof oBEP.ebene[SCH.ebene] == "undefined"){
          Err.push($.sprintf("E - Die Ebene %s ist nicht korrekt", SCH.ebene));
          ErrInp.push("ebene", "ebene_txt");
          ret = false;
          $("input[name=ebene_txt]", li).val("");
        } else
          $("input[name=ebene_txt]", li).val(oBEP.ebene[SCH.ebene]);
        $("input[name=ebene]", li).val(SCH.ebene);
      } else {
        SCH.ebene = "";
        $("input[name=ebene]", li).val(SCH.ebene);
        $("input[name=ebene_txt]", li).val("");
      }
      // planart
      if(PARS.A[0] >= 0){
        SCH.planart = SCH.plnr.substr(PARS.A[0], PARS.A[1]);
        if(typeof oBEP.planart[SCH.planart] == "undefined"){
          Err.push($.sprintf("E - Die Planart %s ist nicht korrekt", SCH.planart));
          ErrInp.push("planart", "planart_txt");
          ret = false;
        } else
          $("input[name=planart_txt]", li).val(oBEP.planart[SCH.planart]);
        $("input[name=planart]", li).val(SCH.planart);
      } else {
        SCH.planart = "";
        $("input[name=planart]", li).val(SCH.planart);
        $("input[name=planart_txt]", li).val("");
      }
      // LPH
      if(PARS.L[0] >= 0){
        SCH.lph = parseInt(SCH.plnr.substr(PARS.L[0], PARS.L[1]));
        if(oPrjUser.val.lph != SCH.lph){
          Wrn.push($.sprintf(
            "W - Die LPH %s wurde korrigiert auf %s",
            SCH.lph, oPrjUser.val.lph
          ));
          ErrInp.push("lph");
          ret = false;
        }
      }
      SCH.lph = oPrjUser.val.lph;
      // planer / type
      if(PARS.P[0] >= 0){
        SCH.type = SCH.plnr.substr(PARS.P[0], PARS.P[1]);
        if(SCH.type != type){
          var P = SCH.type ;
          for(var i in oPrj.val.planer){
            var p = oPrj.val.planer[i];
            if(p.replace(/-.*$/g, "") == SCH.type){
              P = p;
              break;
            }
          }
          Wrn.push($.sprintf("W - Der Planer '%s' wurde korrigiert auf '%s'", P, type));
          ErrInp.push("plnr");
          ret = false;
        }
      }
      SCH.type = type;
      // lnr
      if(PARS.N[0] >= 0)
        SCH.lnr = SCH.plnr.substr(PARS.N[0], PARS.N[1]);
      else
        SCH.lnr = "";
      $("input[name=lnr]", li).val(SCH.lnr);
      // zusatz
      $("input[name=zusatz]", li).val(SCH.zusatz);
      // planindex
      $("input[name=ix]", li).val(SCH.ix);
      if(SCH.ix.match(RVorabzug)){
        Wrn.push("M - Vorabzug");
      } else if(oPrj.val.schema.t == "N" && !Number.isInteger(SCH.ix)){
        Err.push("E - Index muss numerisch sein");
        ErrInp.push("ix");
        ret = false;
      } else if(oPrj.val.schema.t == "A" && !SCH.ix.match(RAlpha)){
        Err.push("E - Index muss alphabetisch sein");
        ErrInp.push("ix");
        ret = false;
      } else {
        var o = {
          id:   REST_ID,
          base: SQL_PRJ_BASE,
          cmd:  [{
            sgn:   "GET_IX",
            query:
              "SELECT id,plnr,ix FROM plan "+
              "WHERE "+
                "SUBSTRING(plnr, 1, ?) = ? AND "+
                "SUBSTRING(plnr, ?) = ? AND "+
                "ix RLIKE ? AND "+
                "SUBSTR(name, ?) = ? "+
              "ORDER BY ix DESC "+
              "LIMIT 1",
            para: [
              PARS.I[0], SCH.plnr.substr(0, PARS.I[0]),
              PARS.I[0] + PARS.I[1] + 1, SCH.plnr.substring(PARS.I[0] + PARS.I[1], oPrj.val.schema.f.length),
              oPrj.val.schema.t == "N" ? '[0-9]' : '[A-z]',
              - Ext.length, Ext
            ]
          }]
        };
        $.post("/sql", o, function(D){
          if(D.GET_IX.length){
            D = D.GET_IX[0];
            LstAkt = D.id;
            SCH.ix = oPrj.val.schema.t == "N" ?
              D.ix + 1 :
              String.fromCharCode((D.ix.charCodeAt(0)) + 1);
            $("input[name=ix]", li).val(SCH.ix);
            SCH.plnr = setCharAt(SCH.plnr, PARS.I[0], SCH.ix);
            Wrn.push($.sprintf("M - Neuer Index %s, Datenbank wird aktualisiert", SCH.ix));
          } else {
            Wrn.push("M - Neue Datei");
          }
          messages();
          // plannummer
          $("input[name=plnr]", li)
          .val(SCH.plnr.substring(0, oPrj.val.schema.f.length));
          if(callBack)
            callBack(ret);
        });
        return;
      }
      // vorabzug oder ix falsch
      messages();
      // plannummer
      $("input[name=plnr]", li)
      .val(SCH.plnr.substring(0, oPrj.val.schema.f.length));
      if(callBack)
        callBack(ret);
      // messages ......................................................
      function messages(){
        $("input", li).removeClass("ui-state-error");
        $("div.c_msg", li).text(Err.concat(Wrn).join("\n"));
        for(var x in ErrInp){
          $("[name="+ErrInp[x]+"],[name="+ErrInp[x]+"_text]", li).addClass("ui-state-error");
        }
        // upload button
        $("button[data-choice=UPLOAD]", li)
        .button("option", "disabled", (Err.length && oPrj.val.schema.s) == 1);
      }
    }
    // send file .......................................................
    function send_file(f){
      var reader = new FileReader();
      reader.onload = (function(theFile) {
        return function(e) {
          var o = {
            id: REST_ID,
            base: SQL_PRJ_BASE,
            cmd:  [{
              sgn:   "AKT",
              query: "UPDATE plan SET akt='-' WHERE id=?",
              para: [LstAkt]
            },{
              sgn:   "INS",
              query: "INSERT INTO plan "+
                 "(lph,type,name,plnr,lnr,ix,zusatz,autor,pldatum,note,akt,bauteil,ebene,planart,m,stop,public) "+
                 "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)",
              para: [
                SCH.lph, SCH.type, SCH.name,
                SCH.plnr.substr(0, oPrj.val.schema.f.length),
                SCH.lnr, SCH.ix, SCH.zusatz,
                oUser.dbuser,
                SCH.pldatum, "", "X",
                SCH.bauteil, SCH.ebene, SCH.planart,
                0, "", "-"
              ]
            }]
          };
          // SQL-INSERT => id
          $.post("/sql", o, function(D){
            var Form = new FormData();
            Form.append("file", f);
            Form.append("id", REST_ID);
            Form.append("path", $.sprintf(
                "bermuda/%s/plan/%06i.%s",
                SQL_PRJ_BASE, D.INS.lastID, f.name.replace(/^.*[.]/g, "")
            ));
            Form.append("preview", 1);
            mail.push($.sprintf(
              "%2i %3i %-10s %s",
              mail.length + 1, D.INS.lastID, type, f.name
            ));
            // upload
            $.ajax({
              url: '/sto',
              data: Form,
              dataType: 'text',
              processData: false,
              contentType: false,
              type: 'POST',
              xhr: function()
              {
                var xhr = new window.XMLHttpRequest();
                // Upload progress
                xhr.upload.addEventListener("progress", function(evt){
                  if (evt.lengthComputable) {
                    var percentComplete = parseInt(evt.loaded / evt.total * 100);
                    $("div.pr", li).progressbar("value", percentComplete);
                  }
                }, false);
                // Download progress
  /*
                xhr.addEventListener("progress", function(evt){
                  if (evt.lengthComputable) {
                    var percentComplete = evt.loaded / evt.total;
                    //Do something with download progress
                    console.log("?", percentComplete);
                  }
                }, false);
  */
                return xhr;
              },
              success: function(data){
                if(window.upload_time){
                  clearTimeout(window.upload_time);
                  window.upload_time = false;
                }
                window.upload_time = setTimeout(function(){
                  ui.element.element.tables("option", "recId", D.INS.lastID);
                  $("button[data-choice=REFRESH]", ui.element.element).click();
                  window.upload_time = false;
                }, 1000);
                $("i", li)
                .removeClass("fa-spin fa-spinner")
                .addClass("fa-check");
                logs.push(D.INS.lastID+" "+f.name);
              }
            });
          });
        };
      })(f);
      reader.readAsBinaryString(f);
    }
  }
  // datum to plnr -----------------------------------------------------
  function date2plnr(SCH, PARS){
    if(PARS.J[0] < 0)
      return;
    // jahr
    for(var i = PARS.J[1] - 1,j = 3;i >= 0 && j >= 0;i--,j--)
      SCH.plnr = setCharAt(SCH.plnr, PARS.J[0] + i, SCH.pldatum[j]);
    // monat
    for(var i = PARS.M[1] - 1,j = 6;i >= 0 && j >= 5;i--,j--)
      SCH.plnr = setCharAt(SCH.plnr, PARS.M[0] + i, SCH.pldatum[j]);
    // tag
    for(var i = PARS.T[1] - 1,j = 9;i >= 0 && j >= 8;i--,j--)
      SCH.plnr = setCharAt(SCH.plnr, PARS.T[0] + i, SCH.pldatum[j]);
  }
}
// #####################################################################
</script>
<div id="id_Plan" tabindex="1" style="display:none" class="ui-corner-top">
  <form id="id_Plan_Form" style="display:block" class="mk-tables-form">
    <input type="submit" tabindex="-1" style="position:absolute;top:-1000px;display:none">
    <table id="id_Plan_Table" tabindex="2">
      <tbody>
        <tr>
          <td class="ui-widget-content ui-state-disabled" style="width:1%">
            <input name="id" style="width:4em;text-align:center;background:transparent" type="text" disabled>
          </td>
          <td class="ui-widget-content ui-state-disabled" style="width:1%">
            <input name="stmp" style="width:10em;text-align:center;background:transparent" type="text" disabled>
          </td>
          <td class="ui-widget-header"></td>
          <td class="ui-widget-header" style="width:1%;white-space:nowrap">
            Autor&nbsp;
            <i class="fa fa-envelope-o" data-choice="autor"></i>
            &nbsp;
          </td>
          <td class="ui-widget-content ui-state-disabled" style="width:1%">
            <input name="autor" style="width:15em;text-align:center;background:transparent" class="upd" type="text" disabled>
          </td>
          <td class="ui-widget-header" style="width:1%;white-space:nowrap">
            Sperre&nbsp;
            <i class="fa fa-envelope-o" data-choice="stop"></i>
            &nbsp;
            <i class="fa fa-lock" data-choice="lock"></i>
            &nbsp;
          </td>
          <td class="ui-widget-content ui-state-disabled" style="width:1%">
            <input name="stop" style="width:15em;text-align:center;background:transparent" type="text" class="upd" disabled>
          </td>
          <td class="ui-widget-content" style="width:1%;padding:0">
            <input data-enum='["-","X"]' type="button" title="Publizieren" name="public" class="enum upd" style="width:2em">
          </td>
          <td class="ui-widget-content" style="width:1%;padding:0">
            <input data-enum='["-","X"]' type="button" title="Aktuell" name="akt" class="enum upd" style="width:2em">
          </td>
        </tr>
      </tbody>
    </table>

    <table tabindex="3" style="width:100%">
      <tbody>
        <tr>
          <td class="ui-widget-header lang">Name</td>
          <td class="ui-widget-content" colspan="10">
            <input type="text" name="name" class="upd">
          </td>
        </tr>
        <tr>
          <td class="ui-widget-header">Bauteil</td>
          <td class="ui-widget-header">
            <input type="text" name="bauteil" class="upd c_val">
            <input type="text" name="bauteil_txt" class="c_txt autocomplete">
          </td>
          <td class="ui-widget-header">Pl.Nr.</td>
          <td class="ui-widget-header" colspan="8">
            <input type="text" name="plnr" class="upd">
          </td>
        </tr>
        <tr>
          <td class="ui-widget-header">Ebene</td>
          <td class="ui-widget-header">
            <input type="text" name="ebene" class="upd c_val">
            <input type="text" name="ebene_txt" class="c_txt autocomplete">
          </td>
          <td class="ui-widget-header">Lfd.Nr.</td>
          <td class="ui-widget-header">
            <input type="text" name="lnr" class="upd" style="width:3em;text-align:center">
          </td>
          <td class="ui-widget-header">Zusatz</td>
          <td class="ui-widget-header" colspan="6">
            <input type="text" name="zusatz" class="upd">
          </td>
        </tr>
        <tr>
          <td class="ui-widget-header" style="width:1%">Planart</td>
          <td class="ui-widget-header" style="width:30em">
            <input type="text" name="planart" class="upd c_val">
            <input type="text" name="planart_txt" class="c_txt autocomplete">
          </td>
          <td class="ui-widget-header" style="width:1%">Index</td>
          <td class="ui-widget-header" style="width:1%">
            <input type="text" name="ix" class="upd" style="width:3em;text-align:center">
          </td>
          <td class="ui-widget-header" style="width:1%">Pl.Dat.</td>
          <td class="ui-widget-header" style="width:1%">
            <input type="text" name="pldatum" class="datepicker upd" style="text-align:center;width:7em">
          </td>
          <td class="ui-widget-header" style="width:1%">M</td>
          <td class="ui-widget-header" style="width:1%">
            <span style="width:2em;text-align:center">1 : </span>
            <input type="text" name="m" class="upd" style="width:3em;text-align:center">
          </td>
          <td class="ui-widget-header"></td>
          <td class="ui-widget-header" style="width:1%">LPH</td>
          <td class="ui-widget-header" style="width:1%">
            <input type="text" name="lph" class="upd" style="text-align:center;width:3em">
          </td>
        </tr>
      </tbody>
    </table>

    <table tabindex="4" style="width:100%">
      <tbody>
        <tr>
          <td class="ui-widget-header lang" style="width:40%;text-align:left">Note</td>
          <td class="ui-widget-header" style="text-align:left">Vorschau</td>
        </tr>
        <tr>
          <td class="ui-widget-content" style="height:200px">
            <textarea name="note" class="upd"></textarea>
          </td>
          <td class="ui-widget-content">
            <img id="id_PlanPreview" alt="Keine Vorschau!" style="height:200px;overflow:auto" class="zoom">
          </td>
        </tr>
      </tbody>
    </table>
    <div style="float:left;padding:6px">
      Typ
      <select name="type" style="" class="ui-widget-content"></select>
      &nbsp;
      <a href="" target="_blank">√ñffentlicher Link</a>
    </div>
  </form>
</div>
